{"version":3,"sources":["helper/index.js","components/Header/index.js","components/SearchInput/index.js","components/EmojiItem/index.js","components/EmojiList/index.js","App.js","reportWebVitals.js","index.js"],"names":["contains","key","value","emoji","toLocaleLowerCase","includes","filterEmoji","searchText","maxResults","emojilist","filter","slice","Header","className","src","width","height","alt","SearchInput","textChange","onChange","e","target","type","EmojiItem","title","hex","symbol","codePointAt","toString","EmojiList","emojiData","map","App","useState","filteredEmoji","setFilteredEmoji","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+tsKAEA,SAASA,EAASC,EAAKC,EAAOC,GAC5B,QAAIA,EAAMF,GAAKG,oBAAoBC,SAASH,EAAME,qBAK7C,IAAME,EAAc,SAACC,EAAYC,GAMtC,OALwBC,EAAUC,QAChC,SAACP,GAAD,OACEH,EAAS,QAASO,EAAYJ,IAC9BH,EAAS,WAAYO,EAAYJ,MAEdQ,MAAM,EAAGH,I,eCSnBI,EApBA,WACb,OACE,yBAAQC,UAAU,mBAAlB,UACE,qBACEC,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,QALR,eAQE,qBACEH,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,YCFGC,G,MAZK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAKrB,OACE,qBAAKN,UAAU,yBAAf,SACE,uBAAOO,SANX,SAAqBC,GACnBF,EAAWE,EAAEC,OAAOpB,QAKYqB,KAAK,aCK1BC,G,MAZG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MACbC,EADiC,EAAbC,OACPC,YAAY,GAAGC,SAAS,IACrCf,EAAG,iDAA6CY,EAA7C,QAET,OACE,sBAAKb,UAAU,6BAAf,UACE,qBAAKC,IAAKA,EAAKG,IAAKQ,IACpB,sBAAMZ,UAAU,QAAhB,SAAyBY,SCOhBK,EAdG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,8BACGA,EAAUC,KAAI,SAAC7B,GAAD,OACb,cAAC,EAAD,CAEEwB,OAAQxB,EAAMwB,OACdF,MAAOtB,EAAMsB,OAFRtB,EAAMsB,aCcNQ,MAff,WACE,MAA0CC,mBAAS5B,EAAY,GAAI,KAAnE,mBAAO6B,EAAP,KAAsBC,EAAtB,KAKA,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAajB,WANjB,SAA4BjB,GAC1BkC,EAAiB9B,EAAYJ,EAAO,QAMlC,cAAC,EAAD,CAAW6B,UAAWI,QCLbE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6b70c29.chunk.js","sourcesContent":["import emojilist from \"./../emojiList.json\";\r\n\r\nfunction contains(key, value, emoji) {\r\n  if (emoji[key].toLocaleLowerCase().includes(value.toLocaleLowerCase()))\r\n    return true;\r\n  else return false;\r\n}\r\n\r\nexport const filterEmoji = (searchText, maxResults) => {\r\n  const filteredResults = emojilist.filter(\r\n    (emoji) =>\r\n      contains(\"title\", searchText, emoji) ||\r\n      contains(\"keywords\", searchText, emoji)\r\n  );\r\n  return filteredResults.slice(0, maxResults);\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='component-header'>\r\n      <img\r\n        src='//cdn.jsdelivr.net/emojione/assets/png/1f638.png'\r\n        width='32'\r\n        height='32'\r\n        alt='cat'\r\n      />\r\n      Emoji Search\r\n      <img\r\n        src='//cdn.jsdelivr.net/emojione/assets/png/1f638.png'\r\n        width='32'\r\n        height='32'\r\n        alt='cat'\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./search-input.css\";\r\n\r\nconst SearchInput = ({ textChange }) => {\r\n  function handleInput(e) {\r\n    textChange(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='component-search-input'>\r\n      <input onChange={handleInput} type='text' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport \"./emojiItem.css\";\r\n\r\nconst EmojiItem = ({ title, symbol }) => {\r\n  const hex = symbol.codePointAt(0).toString(16);\r\n  const src = `//cdn.jsdelivr.net/emojione/assets/png/${hex}.png`;\r\n\r\n  return (\r\n    <div className='component-emoji-result-row'>\r\n      <img src={src} alt={title} />\r\n      <span className='title'>{title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiItem;\r\n","import React from \"react\";\r\nimport EmojiItem from \"../EmojiItem/index\";\r\n\r\nconst EmojiList = ({ emojiData }) => {\r\n  return (\r\n    <div>\r\n      {emojiData.map((emoji) => (\r\n        <EmojiItem\r\n          key={emoji.title}\r\n          symbol={emoji.symbol}\r\n          title={emoji.title}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiList;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport { filterEmoji } from \"./helper\";\nimport Header from \"./components/Header\";\nimport SearchInput from \"./components/SearchInput/index\";\nimport EmojiList from \"./components/EmojiList/index\";\n\nfunction App() {\n  const [filteredEmoji, setFilteredEmoji] = useState(filterEmoji(\"\", 20));\n\n  function handleSearchChange(value) {\n    setFilteredEmoji(filterEmoji(value, 20));\n  }\n  return (\n    <div>\n      <Header />\n      <SearchInput textChange={handleSearchChange} />\n      <EmojiList emojiData={filteredEmoji} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}